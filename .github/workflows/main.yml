name: Automatic Python Application Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Install PyInstaller
      run: pip install pyinstaller

    - name: Build the Windows application
      run: pyinstaller --onefile --windowed --icon="view/icon.ico" --add-data "view/icon.png;view" main.py
      working-directory: ./crypto_keeper

    - name: Create CryptoKeeper folder and move exe
      run: |
        if (Test-Path CryptoKeeper) { Remove-Item -Recurse -Force CryptoKeeper }
        mkdir CryptoKeeper
        move dist\main.exe CryptoKeeper\CryptoKeeper.exe
      working-directory: ./crypto_keeper

    - name: Compress Windows files
      run: Compress-Archive -Path crypto_keeper/CryptoKeeper -DestinationPath CryptoKeeper-Windows-${{ github.ref_name }}.zip

    - uses: actions/upload-artifact@v2
      with:
        name: CryptoKeeper-Windows-${{ github.ref_name }}.zip
        path: CryptoKeeper-Windows-${{ github.ref_name }}.zip

  build-macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Install PyInstaller
      run: pip install pyinstaller

    - name: Build the macOS application
      run: pyinstaller --onefile --windowed --icon="view/icon.icns" --add-data "view/icon.icns:view" main.py
      working-directory: ./crypto_keeper

    - name: Create CryptoKeeper folder and move app
      run: |
        rm -rf CryptoKeeper
        mkdir CryptoKeeper
        mv dist/main.app CryptoKeeper/CryptoKeeper.app
      working-directory: ./crypto_keeper

    - name: Compress macOS files
      run: zip -r CryptoKeeper-macOS-${{ github.ref_name }}.zip crypto_keeper/CryptoKeeper

    - uses: actions/upload-artifact@v2
      with:
        name: CryptoKeeper-macOS-${{ github.ref_name }}.zip
        path: CryptoKeeper-macOS-${{ github.ref_name }}.zip

  release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: CryptoKeeper-Windows-${{ github.ref_name }}.zip

    - uses: actions/download-artifact@v2
      with:
        name: CryptoKeeper-macOS-${{ github.ref_name }}.zip

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./CryptoKeeper-Windows-${{ github.ref_name }}.zip
        asset_name: CryptoKeeper-Windows-${{ github.ref_name }}.zip
        asset_content_type: application/zip

    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./CryptoKeeper-macOS-${{ github.ref_name }}.zip
        asset_name: CryptoKeeper-macOS-${{ github.ref_name }}.zip
        asset_content_type: application/zip